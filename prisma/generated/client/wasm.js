
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.AccountScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  provider: 'provider',
  providerAccountId: 'providerAccountId',
  refresh_token: 'refresh_token',
  access_token: 'access_token',
  expires_at: 'expires_at',
  token_type: 'token_type',
  scope: 'scope',
  id_token: 'id_token',
  session_state: 'session_state'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  sessionToken: 'sessionToken',
  userId: 'userId',
  expires: 'expires'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  emailVerified: 'emailVerified',
  image: 'image'
};

exports.Prisma.VerificationTokenScalarFieldEnum = {
  id: 'id',
  identifier: 'identifier',
  token: 'token',
  expires: 'expires'
};

exports.Prisma.StoryScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  ownerId: 'ownerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.StoryMemberScalarFieldEnum = {
  id: 'id',
  role: 'role',
  storyId: 'storyId',
  userId: 'userId',
  createdAt: 'createdAt'
};

exports.Prisma.SceneScalarFieldEnum = {
  id: 'id',
  title: 'title',
  content: 'content',
  positionX: 'positionX',
  positionY: 'positionY',
  storyId: 'storyId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ChoiceScalarFieldEnum = {
  id: 'id',
  text: 'text',
  sourceSceneId: 'sourceSceneId',
  targetSceneId: 'targetSceneId',
  createdAt: 'createdAt'
};

exports.Prisma.CharacterScalarFieldEnum = {
  id: 'id',
  name: 'name',
  persona: 'persona',
  storyId: 'storyId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AssetScalarFieldEnum = {
  id: 'id',
  name: 'name',
  type: 'type',
  content: 'content',
  storyId: 'storyId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DocumentScalarFieldEnum = {
  id: 'id',
  name: 'name',
  url: 'url',
  status: 'status',
  extractedData: 'extractedData',
  storyId: 'storyId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AnalyticsEventScalarFieldEnum = {
  id: 'id',
  playthroughId: 'playthroughId',
  storyId: 'storyId',
  choiceId: 'choiceId',
  sourceSceneId: 'sourceSceneId',
  targetSceneId: 'targetSceneId',
  createdAt: 'createdAt'
};

exports.Prisma.ChoiceAnalyticsScalarFieldEnum = {
  id: 'id',
  clickCount: 'clickCount',
  storyId: 'storyId',
  choiceId: 'choiceId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};
exports.AssetType = exports.$Enums.AssetType = {
  TEXT_SNIPPET: 'TEXT_SNIPPET',
  IMAGE_URL: 'IMAGE_URL'
};

exports.DocumentStatus = exports.$Enums.DocumentStatus = {
  UPLOADED: 'UPLOADED',
  PROCESSING: 'PROCESSING',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED'
};

exports.Role = exports.$Enums.Role = {
  OWNER: 'OWNER',
  EDITOR: 'EDITOR',
  VIEWER: 'VIEWER'
};

exports.Prisma.ModelName = {
  Account: 'Account',
  Session: 'Session',
  User: 'User',
  VerificationToken: 'VerificationToken',
  Story: 'Story',
  StoryMember: 'StoryMember',
  Scene: 'Scene',
  Choice: 'Choice',
  Character: 'Character',
  Asset: 'Asset',
  Document: 'Document',
  AnalyticsEvent: 'AnalyticsEvent',
  ChoiceAnalytics: 'ChoiceAnalytics'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "D:\\Coding\\narrative-story\\prisma\\generated\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "D:\\Coding\\narrative-story\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../..",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mongodb",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"./generated/client\"\n}\n\ndatasource db {\n  provider = \"mongodb\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Account {\n  id                String  @id @default(auto()) @map(\"_id\") @db.ObjectId\n  userId            String  @db.ObjectId\n  type              String\n  provider          String\n  providerAccountId String\n  refresh_token     String? @db.String\n  access_token      String? @db.String\n  expires_at        Int?\n  token_type        String?\n  scope             String?\n  id_token          String? @db.String\n  session_state     String?\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([provider, providerAccountId])\n}\n\nmodel Session {\n  id           String   @id @default(auto()) @map(\"_id\") @db.ObjectId\n  sessionToken String   @unique\n  userId       String   @db.ObjectId\n  expires      DateTime\n  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n}\n\nmodel User {\n  id            String    @id @default(auto()) @map(\"_id\") @db.ObjectId\n  name          String?\n  email         String?   @unique\n  emailVerified DateTime?\n  image         String?\n  accounts      Account[]\n  sessions      Session[]\n\n  storiesOwned     Story[] // Renamed from 'stories' for clarity\n  // NEW: Link to the membership table\n  storyMemberships StoryMember[]\n}\n\nmodel VerificationToken {\n  id         String   @id @default(auto()) @map(\"_id\") @db.ObjectId\n  identifier String\n  token      String   @unique\n  expires    DateTime\n\n  @@unique([identifier, token])\n}\n\nmodel Story {\n  id          String  @id @default(auto()) @map(\"_id\") @db.ObjectId\n  title       String\n  description String?\n\n  // Renamed from 'userId' to 'ownerId' for clarity\n  ownerId String @db.ObjectId\n  owner   User   @relation(fields: [ownerId], references: [id], onDelete: Cascade)\n\n  // NEW: Link to the membership table\n  members StoryMember[]\n\n  scenes          Scene[]\n  characters      Character[]\n  assets          Asset[]\n  documents       Document[]\n  analyticsEvents AnalyticsEvent[]\n  choiceAnalytics ChoiceAnalytics[]\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel StoryMember {\n  id   String @id @default(auto()) @map(\"_id\") @db.ObjectId\n  role Role   @default(EDITOR)\n\n  storyId String @db.ObjectId\n  story   Story  @relation(fields: [storyId], references: [id], onDelete: Cascade)\n\n  userId String @db.ObjectId\n  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  createdAt DateTime @default(now())\n\n  @@unique([storyId, userId]) // A user can only be in a story once\n}\n\nmodel Scene {\n  id        String  @id @default(auto()) @map(\"_id\") @db.ObjectId\n  title     String\n  content   String?\n  positionX Float   @default(0)\n  positionY Float   @default(0)\n\n  storyId String @db.ObjectId\n  story   Story  @relation(fields: [storyId], references: [id], onDelete: Cascade)\n\n  // RELATIONSHIPS FOR CHOICES\n  choicesFrom Choice[] @relation(\"SourceChoices\")\n  choicesTo   Choice[] @relation(\"TargetChoices\")\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\n// NEW MODEL for edges/connections\nmodel Choice {\n  id   String @id @default(auto()) @map(\"_id\") @db.ObjectId\n  text String // The text on the choice, e.g., \"Go through the red door\"\n\n  sourceSceneId String @db.ObjectId\n  sourceScene   Scene  @relation(\"SourceChoices\", fields: [sourceSceneId], references: [id], onDelete: Cascade)\n\n  targetSceneId   String           @db.ObjectId\n  targetScene     Scene            @relation(\"TargetChoices\", fields: [targetSceneId], references: [id], onDelete: Cascade)\n  analyticsEvents AnalyticsEvent[]\n  analytics       ChoiceAnalytics? // A choice can have one analytics summary\n  createdAt       DateTime         @default(now())\n}\n\nmodel Character {\n  id      String  @id @default(auto()) @map(\"_id\") @db.ObjectId\n  name    String\n  persona String? // A description of the character's personality, voice, etc.\n\n  storyId String @db.ObjectId\n  story   Story  @relation(fields: [storyId], references: [id], onDelete: Cascade)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel Asset {\n  id      String    @id @default(auto()) @map(\"_id\") @db.ObjectId\n  name    String\n  type    AssetType\n  content String\n\n  storyId String @db.ObjectId\n  story   Story  @relation(fields: [storyId], references: [id], onDelete: Cascade)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel Document {\n  id     String         @id @default(auto()) @map(\"_id\") @db.ObjectId\n  name   String\n  url    String         @unique // The URL from Vercel Blob\n  status DocumentStatus @default(UPLOADED)\n\n  extractedData String?\n\n  storyId String @db.ObjectId\n  story   Story  @relation(fields: [storyId], references: [id], onDelete: Cascade)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel AnalyticsEvent {\n  id            String @id @default(auto()) @map(\"_id\") @db.ObjectId\n  playthroughId String // Anonymous ID for a single playthrough session\n\n  storyId String @db.ObjectId\n  story   Story  @relation(fields: [storyId], references: [id], onDelete: Cascade)\n\n  choiceId String @db.ObjectId\n  choice   Choice @relation(fields: [choiceId], references: [id], onDelete: Cascade)\n\n  sourceSceneId String @db.ObjectId\n  targetSceneId String @db.ObjectId\n\n  createdAt DateTime @default(now())\n}\n\n// Stores the aggregated click count for each choice\nmodel ChoiceAnalytics {\n  id         String @id @default(auto()) @map(\"_id\") @db.ObjectId\n  clickCount Int    @default(0)\n\n  storyId String @db.ObjectId\n  story   Story  @relation(fields: [storyId], references: [id], onDelete: Cascade)\n\n  choiceId String @unique @db.ObjectId\n  choice   Choice @relation(fields: [choiceId], references: [id], onDelete: Cascade)\n}\n\nenum AssetType {\n  TEXT_SNIPPET\n  IMAGE_URL\n}\n\nenum DocumentStatus {\n  UPLOADED\n  PROCESSING\n  COMPLETED\n  FAILED\n}\n\nenum Role {\n  OWNER\n  EDITOR\n  VIEWER\n}\n",
  "inlineSchemaHash": "72debb10d26e9aa738ec5c7fa7a4a450054f75ba71f3cd9f68baa61509f3bf17",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Account\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerAccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refresh_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"access_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires_at\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"token_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scope\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"id_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"session_state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AccountToUser\"}],\"dbName\":null},\"Session\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"sessionToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SessionToUser\"}],\"dbName\":null},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accounts\",\"kind\":\"object\",\"type\":\"Account\",\"relationName\":\"AccountToUser\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"SessionToUser\"},{\"name\":\"storiesOwned\",\"kind\":\"object\",\"type\":\"Story\",\"relationName\":\"StoryToUser\"},{\"name\":\"storyMemberships\",\"kind\":\"object\",\"type\":\"StoryMember\",\"relationName\":\"StoryMemberToUser\"}],\"dbName\":null},\"VerificationToken\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"identifier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Story\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ownerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"owner\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"StoryToUser\"},{\"name\":\"members\",\"kind\":\"object\",\"type\":\"StoryMember\",\"relationName\":\"StoryToStoryMember\"},{\"name\":\"scenes\",\"kind\":\"object\",\"type\":\"Scene\",\"relationName\":\"SceneToStory\"},{\"name\":\"characters\",\"kind\":\"object\",\"type\":\"Character\",\"relationName\":\"CharacterToStory\"},{\"name\":\"assets\",\"kind\":\"object\",\"type\":\"Asset\",\"relationName\":\"AssetToStory\"},{\"name\":\"documents\",\"kind\":\"object\",\"type\":\"Document\",\"relationName\":\"DocumentToStory\"},{\"name\":\"analyticsEvents\",\"kind\":\"object\",\"type\":\"AnalyticsEvent\",\"relationName\":\"AnalyticsEventToStory\"},{\"name\":\"choiceAnalytics\",\"kind\":\"object\",\"type\":\"ChoiceAnalytics\",\"relationName\":\"ChoiceAnalyticsToStory\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"StoryMember\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"storyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"story\",\"kind\":\"object\",\"type\":\"Story\",\"relationName\":\"StoryToStoryMember\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"StoryMemberToUser\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Scene\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"positionX\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"positionY\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"storyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"story\",\"kind\":\"object\",\"type\":\"Story\",\"relationName\":\"SceneToStory\"},{\"name\":\"choicesFrom\",\"kind\":\"object\",\"type\":\"Choice\",\"relationName\":\"SourceChoices\"},{\"name\":\"choicesTo\",\"kind\":\"object\",\"type\":\"Choice\",\"relationName\":\"TargetChoices\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Choice\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"text\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sourceSceneId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sourceScene\",\"kind\":\"object\",\"type\":\"Scene\",\"relationName\":\"SourceChoices\"},{\"name\":\"targetSceneId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"targetScene\",\"kind\":\"object\",\"type\":\"Scene\",\"relationName\":\"TargetChoices\"},{\"name\":\"analyticsEvents\",\"kind\":\"object\",\"type\":\"AnalyticsEvent\",\"relationName\":\"AnalyticsEventToChoice\"},{\"name\":\"analytics\",\"kind\":\"object\",\"type\":\"ChoiceAnalytics\",\"relationName\":\"ChoiceToChoiceAnalytics\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Character\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"persona\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"storyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"story\",\"kind\":\"object\",\"type\":\"Story\",\"relationName\":\"CharacterToStory\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Asset\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"AssetType\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"storyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"story\",\"kind\":\"object\",\"type\":\"Story\",\"relationName\":\"AssetToStory\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Document\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"DocumentStatus\"},{\"name\":\"extractedData\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"storyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"story\",\"kind\":\"object\",\"type\":\"Story\",\"relationName\":\"DocumentToStory\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"AnalyticsEvent\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"playthroughId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"storyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"story\",\"kind\":\"object\",\"type\":\"Story\",\"relationName\":\"AnalyticsEventToStory\"},{\"name\":\"choiceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"choice\",\"kind\":\"object\",\"type\":\"Choice\",\"relationName\":\"AnalyticsEventToChoice\"},{\"name\":\"sourceSceneId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"targetSceneId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"ChoiceAnalytics\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"clickCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"storyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"story\",\"kind\":\"object\",\"type\":\"Story\",\"relationName\":\"ChoiceAnalyticsToStory\"},{\"name\":\"choiceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"choice\",\"kind\":\"object\",\"type\":\"Choice\",\"relationName\":\"ChoiceToChoiceAnalytics\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

